<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="java142.todak.board.dao.BoardDao">
   <!-- 공지사항 글 채번 -->
   <select id="chaebunNotice" resultType="nvo">
       SELECT LPAD(NVL(MAX(SUBSTR(BN_NUM, -4)),0)+1,'4',0) BN_NUM FROM BOARD_NOTICE
   </select>
   
   <!-- 게시물  기본 전체 조회 및 상세보기 -->
    <select id="selectNotice" parameterType="nvo" resultType="nvo">
		SELECT  *
     	FROM(	       	SELECT  AA.*,
			            CEIL(ROW_NUMBER() OVER(ORDER BY ROWNUM)/#{pageSize}) PAGENO,
			            COUNT(BN_NUM) OVER() AS TOTALCOUNT 
	            FROM( SELECT    ROWNUM,  
	                          	X.*
	                  FROM (
	                         SELECT     A.BN_NUM       	BN_NUM,
	                                    A.HM_NAME      	HM_NAME,
	                                    B.CD_NAME      	BN_DEPTNUM,
	                                    C.CD_NAME      	BN_DIVNUM,
	                                    A.HM_EMPNUM    	HM_EMPNUM,
	                                    A.BN_TITLE     	BN_TITLE,
	                                    A.BN_CONTENT   	BN_CONTENT,
	                                    A.BN_IMAGE     	BN_IMAGE,
	                                    A.BN_FILE      	BN_FILE,
	                                    A.BN_DELETEYN  	BN_DELETEYN,
	                                    A.BN_HITNUM    	BN_HITNUM,
	                                    TO_DATE(A.BN_INSERTDATE, 'YYYY-MM-DD')  BN_INSERTDATE,
	                                    A.BN_UPDATEDATE   BN_UPDATEDATE
                             FROM    	BOARD_NOTICE A,CODE B,CODE C
                             WHERE   	B.CD_CODE = A.BN_DEPTNUM
                             AND     	C.CD_CODE = A.BN_DIVNUM
                             AND      	A.BN_DELETEYN = 'Y'
	                              <if test="findIndex != 'admin'">
		                              <if test = "bn_num == null and findIndex != 'hm_empnum'">
		                                and ( A.BN_DIVNUM = #{check_divnum} or A.BN_DIVNUM =  '98' )
	                                	and ( A.BN_DEPTNUM =  '98' or A.BN_DEPTNUM = #{check_deptnum})
		                              </if> 
	                           	  </if>
	                              <if test = "bn_num != null and bn_num != ''">
	                                  AND BN_NUM = #{bn_num}
	                              </if>
	                              <if test = "findIndex != null and findIndex != '' ">
	                             	 <trim prefix="AND" prefixOverrides="AND">
		                                  <if test="findIndex=='bn_title'">
		                                    <![CDATA[bn_title LIKE '%'||#{keyword}||'%']]>            
		                                  </if>
		                                  <if test="findIndex=='bn_content'">
		                                     <![CDATA[AND bn_content LIKE '%'||#{keyword}||'%']]>   
		                                  </if>
		                                  <if test="findIndex=='hm_name'">
		                                     <![CDATA[AND hm_name LIKE '%'||#{keyword}||'%']]>
		                                  </if>
		                                  <if test="findIndex=='bn_deptnum'">
		                                     <![CDATA[AND B.cd_name LIKE '%'||#{keyword}||'%']]>   
		                                  </if>
		                                  <if test="findIndex=='bn_divnum'">
		                                     <![CDATA[AND C.cd_name LIKE '%'||#{keyword}||'%']]>   
		                                  </if>
		                                  <if test="findIndex=='hm_empnum'">
		                                     <![CDATA[AND A.hm_empnum LIKE '%'||#{keyword}||'%']]>   
		                                  </if>
	                                 </trim>
	                            </if>
	                                ORDER BY BN_NUM DESC
	                          ) X
	               	)AA 
	          )
	    WHERE   PAGENO = #{curPage}
		</select>
   
   <!-- 공지사항게시글 작성자 출력하기 -->
   <select id="searchWrite" parameterType="nvo" resultType="nvo">
      SELECT    A.HM_EMPNUM      HM_EMPNUM
      FROM     	BOARD_NOTICE A
      WHERE     A.BN_NUM = #{bn_num}
      AND       A.BN_DELETEYN = 'Y'
   </select>
   
   <!--  조회수 증가  -->
   <update id="updateNoticeHit" parameterType="String">
        UPDATE	BOARD_NOTICE
        SET		BN_HITNUM = BN_HITNUM + 1
        WHERE	BN_NUM = #{bn_num} 
   </update>
   
	<!-- 공지사항게시글 출력하기 -->
   <select id="searchNotice" parameterType="nvo" resultType="nvo">
      SELECT    A.BN_NUM     		BN_NUM,
	            A.HM_NAME    		HM_NAME,
	            B.CD_NAME     		BN_DEPTNUM,
	            C.CD_NAME			BN_DIVNUM,
	            A.HM_EMPNUM			HM_EMPNUM,
	            A.BN_TITLE 			BN_TITLE,
	            A.BN_CONTENT   	 	BN_CONTENT,
	            A.BN_IMAGE      	BN_IMAGE,
	            A.BN_FILE			BN_FILE,
	            A.BN_DELETEYN		BN_DELETEYN,
	            A.BN_HITNUM			BN_HITNUM,
	            TO_DATE(A.BN_INSERTDATE, 'YYYY-MM-DD')  BN_INSERTDATE,
	            A.BN_UPDATEDATE   	BN_UPDATEDATE
      FROM   	BOARD_NOTICE A,CODE B,CODE C
      WHERE   	B.CD_CODE = A.BN_DEPTNUM
      AND     	C.CD_CODE = A.BN_DIVNUM
      AND     	A.BN_DELETEYN = 'Y'
      AND   	A.BN_NUM = #{bn_num}
   </select>
   
   
   <!--  사용자 직책 및 이름가져오기  -->
   <select id="selectWrite" parameterType="mvo" resultType="mvo">
      SELECT    HM_DUTY,
            	HM_NAME,
            	HM_DEPTNUM
      FROM      HUMAN_MEMBER
      WHERE 	HM_EMPNUM = #{hm_empnum}
   
   </select>
   <!-- insert : 공지사항 작성 -->
   <insert id="insertNotice" parameterType="nvo">
      /* Mapper - insertNotice */
      INSERT INTO BOARD_NOTICE(
	                           BN_NUM,
	                           HM_EMPNUM,
	                           HM_NAME,
	                           HM_DUTY,
	                           BN_DEPTNUM,
	                           BN_DIVNUM,
	                           BN_TITLE,
	                           BN_CONTENT,
	                           BN_IMAGE,
	                           BN_FILE,
	                           BN_DELETEYN,
	                           BN_INSERTDATE,
	                           BN_UPDATEDATE
      )VALUES(
	                           #{bn_num},
	                           #{hm_empnum},
	                           #{hm_name},
	                           #{hm_duty},
	                           #{bn_deptnum},
	                           #{bn_divnum},
	                           #{bn_title},
	                           #{bn_content}, 
	                           #{bn_image},
	                           #{bn_file},
	                           'Y',
	                           TO_CHAR(SYSDATE,'YYYYMMDD'),
	                           TO_CHAR(SYSDATE,'YYYYMMDD')
      ) 
   </insert>
   <!-- update : 공지사항 수정하기 -->
   <update id="updateNotice" parameterType="nvo">
      /* Mapper - updateNotice */
      UPDATE BOARD_NOTICE
      SET    BN_TITLE 		= #{bn_title}
            ,BN_CONTENT		= #{bn_content}
            ,BN_DEPTNUM 	= #{bn_deptnum}
            ,BN_DIVNUM 		= #{bn_divnum}
            ,BN_IMAGE 		= #{bn_image}
            ,BN_FILE 		= #{bn_file}
            ,BN_UPDATEDATE 	= TO_CHAR(SYSDATE,'YYYYMMDD')
      WHERE  BN_DELETEYN 	= 'Y'
      AND    BN_NUM 		= #{bn_num}
   </update>
   
   <!-- delete : 공지사항 삭제하기 -->
   <update id="deleteNotice" parameterType="nvo">
      /* Mapper - deleteNotice */
      UPDATE    BOARD_NOTICE
      SET   	BN_DELETEYN = 'N'
      WHERE  	BN_DELETEYN = 'Y'
      AND      	BN_NUM = #{bn_num}
   </update>
   
   <!-- 공지사항 확인 채번 -->
   <select id="chaebunNoCheck" resultType="ncvo">
      SELECT LPAD(NVL(MAX(SUBSTR(BN_CHECKNUM, -4)),0)+1,'4',0) BN_CHECKNUM FROM BOARD_NOCHECK
   </select>
   
   <!-- insert : 공지사항 확인자 정보 저장 -->
   <insert id ="checkNotice" parameterType="ncvo" >
      INSERT INTO BOARD_NOCHECK(
                                 BN_CHECKNUM,
                                 BN_NUM,
                                 HM_EMPNUM,
                                 HM_NAME,
                                 HM_DEPTNUM,
                                 BN_CHECKDATE,
                                 BN_CHECKYN
      )SELECT
                                 #{bn_checknum},
                                 #{bn_num},
                                 #{hm_empnum},
                                 #{hm_name},
                                 #{hm_deptnum},
                                 TO_CHAR(SYSDATE,'YYYYMMDD'),
                           		 'Y'
      FROM DUAL
      WHERE NOT IN (
                      SELECT  BN_CHECKNUM
                              HM_EMPNUM,
                              BN_NUM
                      FROM    BOARD_NOCHECK
                      WHERE   1 = 1
                      AND     HM_EMPNUM = #{hm_empnum}
                      AND     BN_NUM = #{bn_num}
      )
                                                   
   </insert>   
   
   <!-- 공지사항 확인자 리스트 출력하기 -->
   <select id="checkList" parameterType="ncvo" resultType="ncvo">
      SELECT  ROWNUM,
      C.*
      FROM(   SELECT  A.HM_NAME         HM_NAME, 
		              A.BN_CHECKNUM     BN_CHECKNUM,
		              B.CD_NAME         HM_DEPTNUM,
              		  TO_DATE(A.BN_CHECKDATE, 'YYYY-MM-DD')  BN_CHECKDATE
		      FROM    BOARD_NOCHECK A, CODE B
		      WHERE   B.CD_CODE IN (SELECT SUBSTR(A.HM_DEPTNUM ,-2,2) FROM BOARD_NOCHECK)
		      AND     A.BN_NUM = #{bn_num}
		      ORDER BY  BN_CHECKNUM ) C
   </select>
   
</mapper>