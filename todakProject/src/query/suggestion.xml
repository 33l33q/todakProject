<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="java142.todak.board.dao.BoardDao">


	<select id="selectSuggestion" resultType="svo">
		SELECT  *
		FROM(
				SELECT
						AA.*,
						CEIL(ROW_NUMBER() OVER(ORDER BY ROWNUM)/#{pageSize} ) PAGENO,
						COUNT(BS_NUM) OVER() AS TOTALCOUNT 
				FROM(
						SELECT 	ROWNUM
							     , X.*
						FROM (	SELECT  DISTINCT 	A.BS_NUM				BS_NUM,
													A.HM_EMPNUM				HM_EMPNUM,
													A.BS_TITLE				BS_TITLE,
													A.BS_HITNUM				BS_HITNUM,
													TO_DATE(A.BS_INSERTDATE, 'YYYY-MM-DD') 	AS BS_INSERTDATE,
													NVL((SELECT COUNT(B.BSR_NUM)  
						                   			 	FROM BOARD_SUREPLY B 
						                    		 	GROUP BY BS_NUM
						                    		 	HAVING B.BS_NUM =  A.BS_NUM ),0)	AS BSR_NUM,
								                    NVL((SELECT COUNT(C.BSL_LIKEYN)  
									                    FROM BOARD_SULIKE C
									                    GROUP BY BS_NUM
									                    HAVING  C.BS_NUM =  A.BS_NUM ),0) 	AS BSL_LIKEYN,
								                    NVL((SELECT COUNT(C.BSL_DISLIKEYN)  
									                    FROM BOARD_SULIKE C
									                    GROUP BY BS_NUM
									                    HAVING  C.BS_NUM =  A.BS_NUM ),0) 	AS BSL_DISLIKEYN
								FROM	BOARD_SUGGESTION A, BOARD_SUREPLY B, BOARD_SULIKE C
								WHERE	BS_DELETEYN = 'Y'
							    <if test = "findIndex != null and findIndex != '' ">
						            <trim prefix="AND" prefixOverrides="AND">
						                <if test="findIndex=='bs_title'">
						                   <![CDATA[AND A.bs_title LIKE '%'||#{keyword}||'%']]>            
						                 </if>
						                 <if test="findIndex=='bs_content'">
						                    <![CDATA[AND A.bs_content LIKE '%'||#{keyword}||'%']]>   
						                 </if>
						                 	<if test="findIndex=='hm_empnum'">
										    <![CDATA[AND A.hm_empnum LIKE '%'||#{keyword}||'%']]>   
										 </if>
						             </trim>
						        </if>
								ORDER BY BS_NUM DESC  
								) X
						)AA
					)
		WHERE		PAGENO = #{curPage}		
	</select>
   
   <select id="searchSuggestion" resultType="svo">
      SELECT    A.BS_NUM        BS_NUM,
	            A.HM_EMPNUM     HM_EMPNUM,
	            A.BS_TITLE      BS_TITLE,
	            A.BS_CONTENT    BS_CONTENT,
	            A.BS_IMAGE      BS_IMAGE,
	            A.BS_HITNUM     BS_HITNUM,
            	TO_DATE(A.BS_INSERTDATE, 'YYYY-MM-DD')  BS_INSERTDATE
      FROM   	BOARD_SUGGESTION A
      WHERE   	A.BS_DELETEYN = 'Y'
      AND    	A.BS_NUM = #{bs_num} 
   </select>
   
      <!--  조회수 증가  -->
   <update id="updateSuggestionHit" parameterType="String">
        UPDATE  BOARD_SUGGESTION
        SET    	BS_HITNUM 	= BS_HITNUM + 1
        WHERE   BS_NUM      = #{bs_num}
        AND     HM_EMPNUM 	!= #{n_hm_empnum} 
   </update>
   
   
   <select id="chaebunSuggestion" resultType="svo">
      SELECT LPAD(NVL(MAX(SUBSTR(BS_NUM, -4)),0) + 1,'4',0) BS_NUM FROM BOARD_SUGGESTION
   </select>
   
   <insert id="insertSuggestion" parameterType="svo" >
      INSERT INTO BOARD_SUGGESTION(
	       BS_NUM,
	       HM_EMPNUM,
	       BS_TITLE,
	       BS_CONTENT,
	       BS_IMAGE,
	       BS_INSERTDATE,
	       BS_UPDATEDATE,
	       BS_DELETEYN   
      )VALUES(
           #{bs_num},
           #{hm_empnum},
           #{bs_title},
           #{bs_content},
           #{bs_image},
           TO_CHAR(SYSDATE,'YYYYMMDD'),
           TO_CHAR(SYSDATE,'YYYYMMDD'),
           'Y'
      )
   </insert>
   
   <!-- 건의사항 수정 -->
   <update id="updateSuggestion" parameterType="svo">
      UPDATE    BOARD_SUGGESTION
      SET    	BS_TITLE       = #{bs_title} 
            	,BS_CONTENT    = #{bs_content} 
            	,BS_UPDATEDATE    = TO_CHAR(SYSDATE,'YYYYMMDD')
      <if test = "bs_image !=''">
            	,BS_IMAGE = #{bs_image} 
      </if>
      WHERE   	BS_DELETEYN = 'Y'
      AND      	BS_NUM = #{bs_num} 
   </update>
   
   <!-- 건의사항 삭제 -->
   <update id="deleteSuggestion" parameterType="svo">
      UPDATE    BOARD_SUGGESTION
      SET    	BS_DELETEYN = 'N'
      WHERE   	BS_DELETEYN = 'Y'
      AND      	BS_NUM = #{bs_num} 
   </update>
   
   <!-- 건의사항 댓글 전체조회 -->
   <select id="selectSuReply" parameterType="srvo" resultType="srvo">
      SELECT   	ROWNUM
     			,SR.*
      FROM		( SELECT	A.BSR_NUM         BSR_NUM,
			            	A.HM_EMPNUM       HM_EMPNUM,
			            	A.BSR_CONTENT     BSR_CONTENT,
			            	TO_DATE(A.BSR_INSERTDATE, 'YYYY-MM-DD')  BSR_INSERTDATE
			      FROM   	BOARD_SUREPLY A
			      WHERE   	BS_NUM = #{bs_num} 
			      AND      	BSR_DELETEYN = 'Y'
			      ORDER BY BSR_NUM  ) SR		
   </select>


   <select id="chaebunSuReply" resultType="srvo">
      SELECT LPAD(NVL(MAX(SUBSTR(BSR_NUM, -6)),0) + 1,'6',0) BSR_NUM FROM BOARD_SUREPLY
   </select>
   
   <!-- 건의사항 댓글 작성 -->
   <insert id="insertSuReply" parameterType="srvo">
	   INSERT INTO BOARD_SUREPLY(   
		   BSR_NUM,
		   BS_NUM,
		   HM_EMPNUM,
		   BSR_CONTENT,
		   BSR_DELETEYN,
		   BSR_INSERTDATE,
		   BSR_UPDATEDATE
	   )VALUES(
		   #{bsr_num},
		   #{bs_num},
		   #{hm_empnum},
		   #{bsr_content},
		   'Y',
		   TO_CHAR(SYSDATE,'YYYYMMDD'),
		   TO_CHAR(SYSDATE,'YYYYMMDD')
	   )
	   
   </insert>
   
   <!-- 건의사항 댓글 수정하기 -->
   <update id="updateSuReply" parameterType="srvo">
      UPDATE    BOARD_SUREPLY
      SET      	BSR_CONTENT  	= #{bsr_content} 
               ,BSR_UPDATEDATE	= TO_CHAR(SYSDATE,'YYYYMMDD')      
      WHERE   	BSR_DELETEYN  	= 'Y'
      AND     	BSR_NUM       	= #{bsr_num} 
      AND      (HM_EMPNUM = #{hm_empnum}  or  'H000000000000' =  #{hm_empnum} )
   
   </update>
   
   <!-- 건의사항 댓글 삭제하기 -->
   <delete id="deleteSuReply" parameterType="srvo">
      DELETE    BOARD_SUREPLY
      WHERE   	BSR_DELETEYN = 'Y'
      AND      	BSR_NUM      = #{bsr_num} 
      AND      	(HM_EMPNUM   = #{hm_empnum}  or  'H000000000000' =  #{hm_empnum} )
   </delete>
   
   
   <!-- ========================건의사항 좋아요=========================== -->
   <!-- 건의사항 좋아요 수 구하기 -->
   <select id="countSuLike" resultType="slvo" >
      SELECT    COUNT(BSL_LIKEYN) BSL_LIKEYN
      FROM    	BOARD_SULIKE
      WHERE    	BSL_LIKEYN   = 'Y'
      AND      	BS_NUM       = #{bs_num} 
   </select>
   
   <!-- 건의사항 좋아요 유무 확인하기 -->
   <select id="beforeSuLike" resultType="slvo" >
      SELECT    COUNT(BSL_LIKEYN) BSL_LIKEYN
      FROM    	BOARD_SULIKE
      WHERE   	BSL_LIKEYN   = 'Y'
      AND      	BS_NUM       = #{bs_num} 
      AND      	HM_EMPNUM    = #{hm_empnum} 
   </select>
   
   <!-- 건의사항 좋아요 채번 -->
   <select id="chaebunSuLike" resultType="slvo">
      SELECT LPAD(NVL(MAX(SUBSTR(BSL_NUM, -4)),0) + 1,'4',0) BSL_NUM FROM BOARD_SULIKE
   </select>
   
   <!-- 건의사항 좋아요 버튼 누르기 -->
   <insert id="checkSuLike" parameterType="slvo">
      INSERT INTO BOARD_SULIKE(
	        BSL_NUM,
	        BS_NUM,
	        HM_EMPNUM,
	        BSL_LIKEYN      
      )SELECT
           #{bsl_num},
           #{bs_num},
           #{hm_empnum},
           'Y'
      FROM DUAL
      WHERE NOT EXISTS (   
		         SELECT	BSL_NUM,
						BS_NUM,
						HM_EMPNUM,
						BSL_LIKEYN,
						BSL_DISLIKEYN   
		         FROM	BOARD_SULIKE
		         WHERE  1 = 1
		         AND    BS_NUM 		= #{bs_num} 
		         AND   	HM_EMPNUM	= #{hm_empnum} )
   </insert>
   
   <!-- 건의사항 좋아요 취소하기 -->
   <delete id="unCheckSuLike" parameterType="slvo">
      DELETE FROM BOARD_SULIKE
      WHERE   BS_NUM     = #{bs_num} 
      AND     HM_EMPNUM  = #{hm_empnum} 
      AND     BSL_LIKEYN = 'Y'
   </delete>
   
   <!-- 건의사항 비추천 수 구하기 -->
   <select id="countSuDislike" resultType="slvo" >
      SELECT    COUNT(BSL_DISLIKEYN) BSL_DISLIKEYN
      FROM    	BOARD_SULIKE
      WHERE   	BSL_DISLIKEYN = 'Y'
      AND      	BS_NUM        = #{bs_num} 
   </select>
   
   <!-- 건의사항 비추천 유무 확인하기 -->
   <select id="beforeSuDislike" resultType="slvo" >
      SELECT   COUNT(BSL_DISLIKEYN) BSL_DISLIKEYN
      FROM     BOARD_SULIKE
      WHERE    BSL_DISLIKEYN   = 'Y'
      AND      BS_NUM          = #{bs_num} 
      AND      HM_EMPNUM       = #{hm_empnum} 
   </select>

   <!-- 건의사항 비추천 버튼 누르기 -->
   <insert id="checkSuDislike" parameterType="slvo">
      
      INSERT INTO BOARD_SULIKE(
	      BSL_NUM,
	      BS_NUM,
	      HM_EMPNUM,
	      BSL_DISLIKEYN      
      )SELECT
	      #{bsl_num},
	      #{bs_num},
	      #{hm_empnum},
	      'Y'
      FROM DUAL
      WHERE NOT EXISTS (
		         SELECT BSL_NUM,
			           	BS_NUM,
			           	HM_EMPNUM,
			           	BSL_DISLIKEYN,
			           	BSL_LIKEYN   
		         FROM   BOARD_SULIKE
		         WHERE  1 = 1
		         AND    BS_NUM    = #{bs_num} 
		         AND    HM_EMPNUM = #{hm_empnum} )
               
   </insert>
   
   <!-- 건의사항 비추천 취소하기 -->
   <delete id="unCheckSuDislike" parameterType="slvo">
     DELETE FROM BOARD_SULIKE
     WHERE   BS_NUM        = #{bs_num} 
     AND     HM_EMPNUM     = #{hm_empnum} 
     AND     BSL_DISLIKEYN = 'Y'
   </delete>
</mapper>